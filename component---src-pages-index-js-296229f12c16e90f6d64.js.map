{"version":3,"file":"component---src-pages-index-js-296229f12c16e90f6d64.js","mappings":"iMAMMA,EAAe,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACnCC,EAAYF,EAAYE,UACxBC,GAAQC,EAAAA,EAAAA,GAASF,EAAUG,MAC3BC,EAAMJ,EAAUI,KAAO,GAE7B,OACE,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAMC,GAAE,SAAWR,GACjB,uBAAKS,UAAU,iBACb,2BACE,gBAAC,EAAAC,EAAD,CAAaD,UAAU,oCAAoCL,MAAOA,EAAOG,IAAKA,KAEhF,2BACE,qBAAGE,UAAU,4CAA4CR,EAAYU,OACrE,qBAAGF,UAAU,yBAAyBR,EAAYW,OAEpD,uBAAKH,UAAU,2CACZP,OAQPW,EAAW,SAAC,GAAoC,IAAlCb,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAC/BC,EAAYF,EAAYE,UACxBC,GAAQC,EAAAA,EAAAA,GAASF,EAAUG,MAC3BC,EAAMJ,EAAUI,KAAO,GAE7B,OACE,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAMC,GAAE,SAAWR,GACjB,uBAAKS,UAAU,kCACb,uBAAKA,UAAU,cACb,gBAAC,EAAAC,EAAD,CAAaD,UAAU,oCAAoCL,MAAOA,EAAOG,IAAKA,KAEhF,uBAAKE,UAAU,wBACb,2BACE,qBAAGA,UAAU,4CAA4CR,EAAYU,OACrE,qBAAGF,UAAU,yBAAyBR,EAAYW,OAEpD,qBAAGH,UAAU,wDAAwDP,QAqEjF,UA7DiB,SAAC,GAAc,IACxBY,EADuB,EAAXC,KACCC,QAAQC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,YAC5CC,EAASP,EAAMQ,QACrB,OACE,gBAAC,IAAD,CAAQC,UAAU,QAChB,gBAACxB,EAAiBsB,GAClB,uBAAKZ,UAAU,6BAEXK,EAAMU,QAAO,SAACC,EAAQC,EAAGC,EAAOC,GAAnB,OAA6BD,EAAQ,GAAM,EAAd,kBAAsBF,GAAtB,CAA8BG,EAAMC,MAAMF,EAAOA,EAAQ,KAAMF,IAAQ,IAAIP,KAAI,SAAAY,GACvH,IAAMC,EAAMD,EAAMN,QAAO,SAACQ,EAAGC,GAAJ,OAAUD,EAAEE,GAAKD,EAAEC,MAC5C,OACE,uBAAKH,IAAKA,EAAKtB,UAAU,8BAErBqB,EAAMZ,KAAI,SAAAC,GAAI,OACZ,gBAACN,EAAD,eAAUkB,IAAKZ,EAAKe,IAAQf,YAQ1C,uBAAKV,UAAU,uBAEXK,EAAMI,KAAI,SAAAC,GAAI,OACZ,gBAACN,EAAD,eAAUkB,IAAKZ,EAAKe,IAAQf","sources":["webpack://overthinking-blog/./src/pages/index.js"],"sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Layout from '../components/layout'\nimport Card from '../components/card'\n\nconst BlogHeroCard = ({ slug, frontmatter, excerpt }) => {\n  const heroImage = frontmatter.heroImage\n  const image = getImage(heroImage.file)\n  const alt = heroImage.alt || \"\"\n\n  return (\n    <Card>\n      <Link to={`posts/${slug}`}>\n        <div className=\"p-2 space-y-3\">\n          <div>\n            <GatsbyImage className=\"h-48 rounded-t-md md:h-72 lg:h-96\" image={image} alt={alt}/>\n          </div>\n          <div>\n            <p className=\"text-xl text-teal-600 dark:text-teal-400\">{frontmatter.title}</p>\n            <p className=\"text-xs text-zinc-400\">{frontmatter.date}</p>\n          </div>\n          <div className=\"text-sm line-clamp-5 md:line-clamp-none\">\n            {excerpt}\n          </div>\n        </div>\n      </Link>\n    </Card>\n  )\n}\n\nconst BlogCard = ({ slug, frontmatter, excerpt }) => {\n  const heroImage = frontmatter.heroImage\n  const image = getImage(heroImage.file)\n  const alt = heroImage.alt || \"\"\n\n  return (\n    <Card>\n      <Link to={`posts/${slug}`}>\n        <div className=\"p-2 grid grid-cols-3 space-x-3\">\n          <div className=\"col-span-1\">\n            <GatsbyImage className=\"h-28 rounded-l-md md:h-32 lg:h-36\" image={image} alt={alt}/>\n          </div>\n          <div className=\"space-y-4 col-span-2\">\n            <div>\n              <p className=\"text-lg text-teal-600 dark:text-teal-400\">{frontmatter.title}</p>\n              <p className=\"text-xs text-zinc-400\">{frontmatter.date}</p>\n            </div>\n            <p className=\"text-xs line-clamp-3 md:line-clamp-4 lg:line-clamp-5\">{excerpt}</p>\n          </div>\n        </div>\n      </Link>\n    </Card>\n  )\n}\n\nconst BlogPage = ({ data }) => {\n  const pages = data.allFile.nodes.map(node => node.childMdx);\n  const latest = pages.shift();\n  return (\n    <Layout pageTitle=\"Home\">\n      <BlogHeroCard {...latest}/>\n      <div className=\"space-y-3 hidden sm:block\">\n        {\n          pages.reduce((result, _, index, array) => index % 2 === 0 ? [...result, array.slice(index, index + 2)] : result, []).map(pairs => {\n            const key = pairs.reduce((a, b) => a.id + b.id)\n            return (\n              <div key={key} className=\"grid grid-cols-2 space-x-3\">\n                {\n                  pairs.map(node => (\n                    <BlogCard key={node.id} {...node} />\n                  ))\n                }\n              </div>\n            )\n          })\n        }\n      </div>\n      <div className=\"space-y-2 sm:hidden\">\n        {\n          pages.map(node => (\n            <BlogCard key={node.id} {...node} />\n          ))\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile(\n      sort: {fields: childMdx___frontmatter___date, order: DESC}\n      filter: {sourceInstanceName: {eq: \"blog\"}, extension: {eq: \"mdx\"}}\n    ) {\n      nodes {\n        childMdx {\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            heroImage {\n              file {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n          }\n          id\n          slug\n          excerpt(pruneLength: 750)\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPage\n"],"names":["BlogHeroCard","slug","frontmatter","excerpt","heroImage","image","getImage","file","alt","to","className","G","title","date","BlogCard","pages","data","allFile","nodes","map","node","childMdx","latest","shift","pageTitle","reduce","result","_","index","array","slice","pairs","key","a","b","id"],"sourceRoot":""}